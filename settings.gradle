def properties = new Properties()
File setting = new File(settingsDir, 'local.properties');
if (setting.exists()) {
    properties.load(setting.newDataInputStream())
    if (properties.getProperty('config') == null)
        setting = null
    else
        properties.load(new File(settingsDir, properties.getProperty('config')).newDataInputStream())
}
if (setting == null)
    properties.load(new File(settingsDir, 'properties/app-release.properties').newDataInputStream())

println(' ****************** 工程项目配置：' + System.getProperties().get("os.name") + ' ******************')
println('工程项目配置：'+ properties.getProperty('config'))

def apps = properties.getProperty('app')
if (apps != null) {
    apps.split(',').each { name ->
        name = name.trim()
        include ':' + name
        project(':' + name).projectDir = new File(settingsDir, name)
        println(' --> 启用App模块：' + name )
    }
} else {
    println(' --> 无App模块 ... 配置错误？？')
}

//debug导入源码项目
def debugs = properties.getProperty('debug')
if (debugs != null) {
    debugs.split(',').each { name ->
        name = name.trim()
        def tmp = name.split('/')
        def prjname = tmp.length > 1 ? tmp[tmp.length - 1] : name
        include ':' + prjname
        project(':' + prjname).projectDir = new File(settingsDir,  'dep/' + name)
        println(' --> 调试子项目模块 [' + prjname + '] project')
    }
    println(' ------------------ 工程项目配置 结束！！ ------------------------------------ ')
} else {
    println(' --> 无子项目模块需要调试，全部使用AAR引入... ')
    println(' ------------------ 工程项目配置 结束！！ ------------------------------------ ')
}
